version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: toolbox_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-your_password}
      MYSQL_DATABASE: ${DB_NAME:-toolbox_stats}
      MYSQL_USER: ${DB_USER:-toolbox_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-your_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - toolbox_network
    command: --default-authentication-plugin=mysql_native_password

  # 访问统计API服务
  visitor-counter:
    build: .
    container_name: toolbox_visitor_counter
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=${DB_USER:-toolbox_user}
      - DB_PASSWORD=${DB_PASSWORD:-your_password}
      - DB_NAME=${DB_NAME:-toolbox_stats}
      - DB_PORT=3306
      - PORT=3001
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - ADMIN_API_KEY=${ADMIN_API_KEY:-your_secret_key}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - toolbox_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: toolbox_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - visitor-counter
    networks:
      - toolbox_network

volumes:
  mysql_data:
    driver: local

networks:
  toolbox_network:
    driver: bridge
